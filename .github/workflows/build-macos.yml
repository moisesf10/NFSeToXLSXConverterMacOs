name: Build macOS Installer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # build-macos:
  #   runs-on: macos-14
  #   strategy:
  #     # fail-fast: false
  #     matrix:
  #       xcode: ["15.4"]

  #   steps:
    
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: List Xcode installations
  #     run: sudo ls -1 /Applications | grep "Xcode"

  #   - name: Update Xcode Versions ${{ matrix.xcode }}
  #     run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v2
  #     with:
  #       dotnet-version: '8.0.x' # Use a vers√£o correta do .NET

  #   - name: Install MAUI workloads
  #     run: dotnet workload install maui-maccatalyst

  #   - name: Restore dependencies and workloads
  #     run: dotnet workload restore

  #   - name: Build project
  #     run: dotnet build -p:MtouchLink=None -p:PublishSingleFile=true --configuration Release

  #   - name: Publish project
  #     # run: dotnet publish -c Release -r osx-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=true -o  NFSeToXLSX.Core/NFSeToXLSX.Core.csproj
  #     run: dotnet publish -c Release -p:MtouchLink=None -p:PublishSingleFile=true -f net8.0-maccatalyst -o ./publish

  #   - name: Create DMG package
  #     run: |
  #       mkdir -p output
  #       hdiutil create ./output/NFSe_To_XLSX_Converter.dmg -volname "NFSe To XLSX Converter" -srcfolder ./publish

  #   - name: Upload artifact
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: macos-installer
  #       path: ./output/NFSe_To_XLSX_Converter.dmg
  

  build-and-package:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    - name: Install MAUI Workloads
      run: dotnet workload install maui

    - name: Restore NuGet packages
      run: dotnet restore NFSeToXLSXConverterMacOs/NFSeToXLSXConverterMacOs.csproj

    - name: Build Project
      run: dotnet build NFSeToXLSXConverterMacOs/NFSeToXLSXConverterMacOs.csproj --configuration Release /p:Platform="x64"

    - name: Pack MSIX
      run: dotnet publish NFSeToXLSXConverterMacOs/NFSeToXLSXConverterMacOs.csproj --configuration Release /p:Platform="x64" -f net8.0-windows10.0.19041.0 /p:PublishProfile=Properties\PublishProfiles\Win10-MSIXToolkit.pubxml

    - name: Upload MSIX to Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: msix-package
        path: ./output/*.msix

    - name: Sign MSIX Package
      run: SignTool sign /a /fd SHA256 /f NFSeToXLSXConverterMacOs/NFSeToXLSXConverterMacOs_1.0.4.0_x64.cer /p ${{ secrets.PFX_PASSWORD }} ./output/*.msix

    - name: Upload Signed MSIX
      uses: actions/upload-artifact@v2
      with:
        name: signed-msix-package
        path: ./output/*.msix
